{"version":3,"file":"grudus-timepicker.es5.js","sources":["../src/js/timeExtractor.js","../src/js/timeFormatter.js","../src/js/meta/clockHtml.js","../src/js/meta/config.js","../src/js/clockHeader.js","../src/js/face/minutesFace.js","../src/js/face/hoursFace.js","../src/js/meta/utils.js","../src/js/face/clockFaceCreator.js","../src/js/face/clockFace.js","../src/js/clock.js","../src/js/colorStylists.js","../src/js/timepickerCreator.js","../src/js/index.js"],"sourcesContent":["const hoursRegex = /^([0-1]?[0-9]|2[0-3])$/;\nconst minutesRegex = /^([0-5]?[0-9])$/;\nconst regex = /^([0-1]?[0-9]|2[0-3]):([0-5][0-9])$/;\n\nexport default function extractTime(date, hasMeridiem) {\n    if (!date)\n        return fromDate(new Date(), hasMeridiem);\n    else if (hoursRegex.test(date.hours) && minutesRegex.test(date.minutes) \n                && date.meridiem !== undefined \n                && date.meridiem.length > 0)\n        return {hours: parseInt(date.hours), minutes: parseInt(date.minutes), meridiem: date.meridiem};\n    else if (hoursRegex.test(date.hours) && minutesRegex.test(date.minutes))\n        return {hours: parseInt(date.hours), minutes: parseInt(date.minutes)};\n    else if (regex.test(date))\n        return fromRegex(date);\n    else if (date instanceof Date)\n        return fromDate(date, hasMeridiem);\n    else\n        throw new TypeError(`INVALID FORMAT: {${JSON.stringify(date)}}.\n            Time must be a Date or 'hh:MM' string or object with 'hours' and 'minutes' fields`);\n}\n\nfunction fromRegex(date) {\n    const parsed = regex.exec(date);\n    return {hours: parseInt(parsed[1]), minutes: parseInt(parsed[2])};\n}\n\nfunction fromDate(date, hasMeridiem) {\n    if (hasMeridiem !== undefined && !hasMeridiem) return {hours: date.getHours(), minutes: date.getMinutes()};\n    return getTimeWithMeridiem(date);\n\n}\n\nfunction getTimeWithMeridiem(date) {\n    let meridiem = \"\";\n    let hours = date.getHours();    \n    \n    if (hours < 13) meridiem = \"am\";\n    else meridiem = \"pm\";\n    \n    if (hours !== 12) hours = hours % 12;\n    \n    return {hours, minutes: date.getMinutes(), meridiem};\n}","import extractTime from \"./timeExtractor\";\n\nexport default function (time, hasMeridiem) {\n    const extractedTime = extractTime(time, hasMeridiem);\n    return (extractedTime.hours < 10 ? \"0\" + extractedTime.hours : extractedTime.hours)\n        + \":\" + (extractedTime.minutes < 10 ? \"0\" + extractedTime.minutes : extractedTime.minutes)\n        + \" \"+ (extractedTime.meridiem !== undefined ? extractedTime.meridiem : \"\");\n}","\nexport default (options) => {\n    const arrayTemplate = [\"<section class='g-time-wrapper'>\" ,\n        \"    <header class='g-head g-flex' id='g-head'>\" ,\n        \"        <section class='g-head-content'>\" ,\n        \"            <span class='g-current g-hour g-active g-pointer' id='g-hours'>21</span>\" ,\n        \"            <span class='g-current'>:</span>\" ,\n        \"            <span class='g-current g-minute g-pointer' id='g-minutes'>37</span>\"];\n    if (options.meridiem){\n        arrayTemplate.push([\"<div class='content-meridiem'>\" ,\n            \"<span id='g-time-am' class='item-meridiem g-am g-pointer'>AM</span>\" ,\n            \"<span id='g-time-pm' class='item-meridiem g-pm g-pointer'>PM</span>\",\n            \"</div>\"].join(\"\\n\"));\n        \n    }\n    const nextTemplate = [\"        </section>\" ,\n        \"    </header>\" ,\n        \"\" ,\n        \"\" ,\n        \"    <section class='g-clock-wrapper g-flex' id='g-clock-wrapper'>\" ,\n        \"        <div class='g-clock' id='g-clock'>\" ,\n        \"            <span class='g-middle-dot' id='g-middle-dot'></span>\" ,\n        \"            <div class='g-hand-of-a-clock' id='g-hand-of-a-clock'></div>\" ,\n        \"            <div class='g-clock g-clock-inner' id='g-clock-inner'></div>\" ,\n        \"        </div>\" ,\n        \"    </section>\" ,\n        \"\" ,\n        \"\" ,\n        \"    <footer class='g-buttons g-flex' id='g-buttons'>\"];\n\n    nextTemplate.push(`\n        <button id='g-time-cancel' class='g-button g-cancel g-pointer'>${options.labels.cancel || \"\"}</button>\n        <button id='g-time-submit' class='g-button g-submit g-pointer'>${options.labels.ok || \"\"}</button>\n    `);\n    nextTemplate.push(\"</footer> </section>\");\n    return arrayTemplate.concat(nextTemplate).join(\"\\n\");\n};","const clockId = \"grudus-clock\";\n\nconst defaultConfig = {\n    onSubmit: () => {\n    },\n    onCancel: () => {\n    },\n    headerBackground: \"#1976D2\",\n    headerColor: \"#c7d6e1\",\n    headerSelected: \"#ffffff\",\n    wrapperBackground: \"#f0fff0\",\n    footerBackground: \"#f0fff0\",\n    submitColor: \"#1976D2\",\n    cancelColor: \"#1976D2\",\n    clockBackground: \"#CFD8DC\",\n    clockItemColor: \"#212121\",\n    clockItemInnerColor: \"#212121\",\n    handColor: \"#1976D2\",\n    meridiem: false,\n    labels: {\n        cancel:\"Cancel\",\n        ok:\"Ok\",\n    }\n};\n\nconst FaceType = {HOURS: \"hours\", MINUTES: \"minutes\"};\n\nconst css = {\n    clock: \"g-clock\",\n    clockItem: \"g-clock-item\",\n    inner: \"g-clock-inner\",\n    outer: \"g-clock-outer\",\n    item: \"g-clock-item\",\n    hand: \"g-hand-of-a-clock\",\n    fadeOut: \"g-fade-out\",\n    selected: \"g-selected\",\n    active: \"g-active\",\n    submit: \"g-submit\",\n    cancel: \"g-cancel\",\n    hour: \"g-hour\",\n    minute: \"g-minute\"\n};\n\nconst DOM = {\n    headerId: \"g-head\",\n    hoursId: \"g-hours\",\n    minutesId: \"g-minutes\",\n    clockId: \"g-clock\",\n    innerId: \"g-clock-inner\",\n    wrapperId: \"g-clock-wrapper\",\n    dotId: \"g-middle-dot\",\n    handId: \"g-hand-of-a-clock\",\n    buttonsId: \"g-buttons\",\n    submitId: \"g-time-submit\",\n    cancelId: \"g-time-cancel\",\n    gTimeAmId: \"g-time-am\",\n    gTimePmId: \"g-time-pm\"\n};\n\nexport default {clockId, clockConfig: defaultConfig, FaceType};\nexport {css, DOM};","import {DOM} from \"./meta/config\";\n\nexport default class ClockHeader {\n\n    constructor(config) {\n        this.options = config.options;\n        this.time = config.time;\n        this.onHourClicked = config.onHourClicked;\n        this.onMinutesClicked = config.onMinutesClicked;\n\n        this.initView();\n    }\n\n    initView() {\n        this.headerHours = document.getElementById(DOM.hoursId);\n        this.headerHours.onclick = () => {\n            this.toggleActiveToHours();\n            this.onHourClicked();\n        };\n\n        this.headerMinutes = document.getElementById(DOM.minutesId);\n        this.headerMinutes.onclick = () => {\n            this.toggleActiveToMinutes();\n            this.onMinutesClicked();\n        };\n        if (this.options.meridiem) {\n            this.headerAm = document.getElementById(DOM.gTimeAmId);\n            this.headerPm = document.getElementById(DOM.gTimePmId);\n            this.headerAm.onclick = () => {\n                this.toogleActiveMeridiemAm();\n                this.time.meridiem = \"am\";\n            };\n            this.headerPm.onclick = () => {\n                this.toogleActiveMeridiemPm();\n                this.time.meridiem = \"pm\";\n            };\n            if (this.time.meridiem === \"am\") this.toogleActiveMeridiemAm();\n            else if (this.time.meridiem === \"pm\") this.toogleActiveMeridiemPm();\n            else this.defaultToggleActiveMeridiem();\n        }\n\n        this.updateDisplayedTime();\n        this.toggleActiveToHours();\n    }\n\n    toggleActiveToMinutes() {\n        this.toggleActive(this.headerHours, this.headerMinutes);\n    }\n\n    toggleActiveToHours() {\n        this.toggleActive(this.headerMinutes, this.headerHours);\n    }\n\n    toogleActiveMeridiemAm() {\n        this.toggleActive(this.headerPm, this.headerAm);\n        \n    }\n\n    toogleActiveMeridiemPm() {\n        this.toggleActive(this.headerAm, this.headerPm);\n    }\n    \n    defaultToggleActiveMeridiem() {\n        const { hours } = this.time;\n        if (hours < 13) this.toogleActiveMeridiemAm();\n        else this.toogleActiveMeridiemPm();\n    }\n\n    toggleActive(objectToRemoveClass, objectToAddClass) {\n        objectToRemoveClass.style.color = this.options.headerColor;\n        objectToAddClass.style.color = this.options.headerSelected;\n    }\n\n    updateDisplayedTime() {\n        ClockHeader.doUpdateDisplayedTime(this.headerHours, this.time.hours, this.options.meridiem);\n        ClockHeader.doUpdateDisplayedTime(this.headerMinutes, this.time.minutes);\n    }\n\n    static doUpdateDisplayedTime(node, value, meridiem) {\n        if (meridiem && value !== 12) value = value % 12;\n        if (value < 10)\n            node.innerText = \"0\" + value;\n        else node.innerText = value;\n    }\n}","import Config, {css} from \"../meta/config\";\n\nexport default class MinutesFace {\n\n    constructor(items, initialMinutes, updateMinutes) {\n        this.displayed = [\"00\", \"05\", \"10\", \"15\", \"20\", \"25\", \"30\", \"35\", \"40\", \"45\", \"50\", \"55\"];\n        this.options = items.options;\n        this.type = Config.FaceType.MINUTES;\n        this.selected = undefined;\n        this.items = items;\n        this.minutes = initialMinutes;\n        this.updateMinutes = updateMinutes;\n    }\n\n    onEnter() {\n        this.selected = this.findSelected(this.minutes);\n        this.colorSelected();\n        this.updateMinutes(this.minutes, this.minutes * 6);\n    }\n\n    onLeave() {\n        if (this.selected) {\n            this.removeSelected();\n            this.selected = undefined;\n        }\n    }\n\n    selectTime(angle) {\n        if (this.selected)\n            this.removeSelected();\n\n        const minute = Math.round(angle / 6) % 60;\n        this.selected = this.findSelected(minute);\n        this.colorSelected();\n        this.minutes = minute;\n        this.updateMinutes(this.minutes, angle);\n    }\n\n    findSelected(minute) {\n        return (minute % 5 === 0) ? this.items.clockItems[minute / 5] : this.items.outerClockItems[minute];\n    }\n\n    colorSelected() {\n        if (this.isOuter()) {\n            this.selected.classList.add(css.selected);\n            return;\n        }\n        this.selected.style.background = this.options.handColor;\n        this.selected.style.color = \"whitesmoke\";\n    }\n\n    removeSelected() {\n        if (this.isOuter()) {\n            this.selected.classList.remove(css.selected);\n            return;\n        }\n        this.selected.style.background = \"transparent\";\n        this.selected.style.color = this.options.clockItemColor;\n    }\n\n    isOuter() {\n        return this.items.outerClockItems.indexOf(this.selected) > -1;\n    }\n}","import Config from \"../meta/config\";\n\nexport default class HoursFace {\n\n    constructor(items, initialHours, updateHours) {\n        this.displayed = [\"12\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\"];\n        this.displayedInner = [\"00\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\"];\n        this.type = Config.FaceType.MINUTES;\n        this.selected = undefined;\n        this.options = items.options;\n\n        this.items = items;\n        this.hours = initialHours;\n        this.updateHours = updateHours;\n    }\n\n    onEnter() {\n\n        if (this.items.innerClockElem !== null)\n            this.items.innerClockElem.style.display = \"block\";\n        const isInnerClock = this.hours < 13 && this.hours !== 0;\n        const hoursIndex = this.hours % 12;\n        let radius = this.items.radius;\n        if (this.options.meridiem && !isInnerClock) this.selected = this.items.clockItems[hoursIndex];\n        else {\n            this.selected = isInnerClock ? \n                this.items.clockItems[hoursIndex] : \n                this.items.innerClockItems[hoursIndex];\n            radius = isInnerClock ?  radius : radius - 50;\n        }\n        this.colorSelected();\n\n        this.updateHours(this.hours, hoursIndex * 30, radius);\n    }\n\n    onLeave() {\n        if (this.items.innerClockElem !== null)\n            this.items.innerClockElem.style.display = \"none\";\n        if (this.selected) {\n            this.removeSelected();\n            this.selected = undefined;\n        }\n    }\n\n    selectTime(angle, elem) {\n        if (this.selected)\n            this.removeSelected();\n\n        const index = Math.round(angle / 30) % 12;\n        this.selected = (elem === this.items.innerClockElem \n            && this.items.innerClockElem!== undefined\n            ? this.items.innerClockItems\n            : this.items.clockItems)[index];\n\n        this.colorSelected();\n        this.hours = parseInt(this.selected.innerText);\n        const selectedAngle = Math.round(angle / 30) * 30;\n\n        this.updateHours(this.hours, selectedAngle,\n            elem === this.items.innerClockElem && this.items.innerClockElem!== undefined ? this.items.radius - 50 : this.items.radius);\n    }\n\n    colorSelected() {\n        this.selected.style.background = this.options.handColor;\n        this.selected.style.color = \"#ffffff\";\n    }\n\n    removeSelected() {\n        this.selected.style.background = \"transparent\";\n        this.selected.style.color = this.isInner()\n            ? this.options.clockItemInnerColor\n            : this.options.clockItemColor;\n    }\n\n    isInner() {\n        return Array.from(this.items.innerClockItems).indexOf(this.selected) > -1;\n    }\n}","function toRadians(angle) {\n    return angle * (Math.PI / 180);\n}\n\nfunction toDegrees(angle) {\n    return angle * (180 / Math.PI);\n}\n\nfunction findMousePosition(event, object) {\n    const rect = object.getBoundingClientRect();\n    return {\n        x: event.clientX - rect.left,\n        y: event.clientY - rect.top\n    };\n}\n\nfunction delay(t) {\n    return new Promise(function (resolve) {\n        setTimeout(resolve, t);\n    });\n}\n\nPromise.delay = function (fn, t) {\n    if (!t) {\n        t = fn;\n        fn = function () {\n        };\n    }\n    return delay(t).then(fn);\n};\n\nPromise.prototype.delay = function (fn, t) {\n    return this.then(function () {\n        return Promise.delay(fn, t);\n    });\n};\n\nexport default {toRadians, toDegrees, findMousePosition};","import Utils from \"../meta/utils\";\nimport {css} from \"../meta/config\";\n\nexport default class ClockFaceCreator {\n\n    constructor(clockElem, innerClockElem, options) {\n        this.clockElem = clockElem;\n        this.innerClockElem = innerClockElem;\n        this.size = {};\n        this.middle = {};\n        this.options = options;\n    }\n\n    create(clockItems, innerClockItems, outerClockItems, face) {\n        ClockFaceCreator.doCreate(clockItems, this.clockElem, span => span.classList.add(css.item));\n        if (!this.options.meridiem) {\n            ClockFaceCreator.doCreate(innerClockItems, this.innerClockElem, (span, i) => {\n                span.classList.add(css.item, css.inner);\n                span.innerText = face.displayedInner[i];\n            });\n        }\n\n        for (let i = 0; i < 60; i++) {\n            const span = document.createElement(\"span\");\n            span.classList.add(css.outer);\n            outerClockItems.push(span);\n            this.clockElem.appendChild(span);\n        }\n    }\n\n    static doCreate(clockItems, clockElem, fun) {\n        for (let i = 0; i < 12; i++) {\n            const span = document.createElement(\"span\");\n            fun(span, i);\n            clockItems.push(span);\n            clockElem.appendChild(span);\n        }\n    }\n\n    calculateSize(clockItems, innerClockItems, outerClockItems) {\n        this.size.width = this.clockElem.offsetWidth;\n        this.size.height = this.clockElem.offsetHeight;\n        this.middle.x = this.size.width / 2;\n        this.middle.y = this.size.height / 2;\n        this.itemsRadius = this.size.width / 2 - 20;\n\n        ClockFaceCreator.doCalculateSize(this.middle.x, this.middle.y, this.itemsRadius, clockItems);\n        if (!this.options.meridiem) {\n            const innerWidth = this.innerClockElem.offsetWidth;\n            const innerHeight = this.innerClockElem.offsetHeight;\n            const middleX = innerWidth / 2;\n            const middleY = innerHeight / 2;\n            ClockFaceCreator.doCalculateSize(middleX, middleY, this.itemsRadius - 40, innerClockItems);\n        }\n        ClockFaceCreator.doCalculateSize(this.middle.x, this.middle.y, this.itemsRadius, outerClockItems);\n    }\n\n    static doCalculateSize(middleX, middleY, radius, items) {\n        const angleQuantum = 360 / items.length;\n        for (let i = 0; i < items.length; i++) {\n\n            const angle = Utils.toRadians(i * angleQuantum);\n            const item = items[i];\n            const itemWidth = item.offsetWidth;\n            const itemHeight = item.offsetHeight;\n\n            item.style.left = ((middleX + Math.sin(angle) * radius) - itemWidth / 2) + \"px\";\n            item.style.bottom = ((middleY + Math.cos(angle) * radius) - itemHeight / 2) + \"px\";\n        }\n    }\n}","import MinutesFace from \"./minutesFace\";\nimport HoursFace from \"./hoursFace\";\nimport Utils from \"../meta/utils\";\nimport Config, {css, DOM} from \"../meta/config\";\nimport ClockFaceCreator from \"./clockFaceCreator\";\n\nexport default class ClockFace {\n\n    constructor(options, initialTime, onTimeUpdate) {\n        this.options = options;\n        this.time = initialTime;\n        this.onTimeUpdate = onTimeUpdate;\n        this.isMouseDown = false;\n        this.clockItems = [];\n        this.innerClockItems = [];\n        this.outerClockItems = [];\n        this.size = {};\n        this.middle = {};\n\n        this.initViews();\n        this.initTimeFaces(initialTime);\n        this.createFace(options);\n\n        this.hoursFace.items.radius = this.itemsRadius;\n\n        this.currentFace = this.hoursFace;\n        this.changeDisplayed(this.currentFace.displayed);\n    }\n\n    initViews() {\n        this.clockElem = document.getElementById(DOM.clockId);\n        this.innerClockElem = (this.options.meridiem) ? null : document.getElementById(DOM.innerId);\n        this.handOfAClock = document.getElementById(DOM.handId);\n\n        this.clockElem.onmousedown = () => this.isMouseDown = true;\n        this.clockElem.onmouseup = () => {this.isMouseDown = false;\n            this.toggleToMinutes();\n        };\n\n        this.handOfAClock.onmouseup = (e) => e.stopPropagation();\n        this.handOfAClock.onmousemove = (e) => e.stopPropagation();\n        this.handOfAClock.onclick = (e) => e.stopPropagation();\n\n        this.clockElem.onmousemove = (e) => this.selectTime(e, false, this.clockElem);\n        this.clockElem.onclick = (e) => this.selectTime(e, true, this.clockElem);\n\n        if (!this.options.meridiem) {\n            this.innerClockElem.onmousemove = (e) => this.selectTime(e, false, this.innerClockElem);\n            this.innerClockElem.onclick = (e) => this.selectTime(e, true, this.innerClockElem);\n        }\n    }\n\n    initTimeFaces(initialTime) {\n        this.minutesFace = new MinutesFace({\n            options: this.options,\n            clockItems: this.clockItems,\n            outerClockItems: this.outerClockItems\n        }, initialTime.minutes, (minutes, angle) => this.updateMinutes(minutes, angle));\n\n        this.hoursFace = new HoursFace({\n            options: this.options,\n            innerClockItems: this.innerClockItems,\n            clockItems: this.clockItems,\n            innerClockElem: this.innerClockElem\n        }, initialTime.hours, (hours, angle, radius) => this.updateHours(hours, angle, radius));\n    }\n\n    onStart() {\n        this.currentFace.onEnter();\n    }\n\n    createFace() {\n        const clockFaceCreator = new ClockFaceCreator(this.clockElem, this.innerClockElem, this.options);\n        clockFaceCreator.create(this.clockItems, this.innerClockItems, this.outerClockItems, this.hoursFace);\n        clockFaceCreator.calculateSize(this.clockItems, this.innerClockItems, this.outerClockItems);\n\n        this.size = clockFaceCreator.size;\n        this.middle = clockFaceCreator.middle;\n        this.itemsRadius = clockFaceCreator.itemsRadius;\n    }\n\n    selectTime(event, isMouseDown, elem) {\n        if (!(isMouseDown || this.isMouseDown))\n            return;\n        const mouse = Utils.findMousePosition(event, this.clockElem);\n        const x = mouse.x - this.middle.x;\n        const y = this.middle.y - mouse.y;\n        let angle = 90 - Utils.toDegrees(Math.atan(y / x));\n        if (x < 0) angle += 180;\n\n        this.currentFace.selectTime(angle, elem);\n        event.stopPropagation();\n    }\n\n    changeDisplayed(array) {\n        for (let i = 0; i < this.clockItems.length; i++)\n            this.clockItems[i].innerText = array[i];\n    }\n\n    onEachClockElement(fun) {\n        [].forEach.call(this.clockItems, c => fun(c));\n    }\n\n    updateMinutes(minutes, angle) {\n        this.time.minutes = minutes;\n        this.calculateHandOfTheClock(angle, this.itemsRadius);\n        this.onTimeUpdate(this.time, Config.FaceType.MINUTES);\n    }\n\n    updateHours(hours, angle, radius) {\n        this.time.hours = hours;\n        this.calculateHandOfTheClock(angle, radius);\n        this.onTimeUpdate(this.time, Config.FaceType.HOURS);\n    }\n\n    calculateHandOfTheClock(angle, size = this.itemsRadius) {\n        this.handOfAClock.style.transform = `rotate(${angle - 90}deg)`;\n        this.handOfAClock.style.width = size + \"px\";\n    }\n\n    toggleToHours() {\n        this.minutesFace.onLeave();\n        this.toggleTime(this.hoursFace);\n    }\n\n    toggleToMinutes() {\n        this.hoursFace.onLeave();\n        this.toggleTime(this.minutesFace);\n    }\n\n    toggleTime(face) {\n        if (this.currentFace !== face) {\n            this.onEachClockElement(c => c.classList.add(css.fadeOut));\n            this.handOfAClock.classList.add(css.fadeOut);\n            Promise.delay(() => {\n                this.onEachClockElement(c => c.classList.remove(css.fadeOut));\n                this.handOfAClock.classList.remove(css.fadeOut);\n                this.changeDisplayed(face.displayed);\n                this.currentFace = face;\n                this.onEachClockElement(c => this.removeSelected(c));\n                face.onEnter();\n            }, 300);\n        }\n    }\n\n    removeSelected(c) {\n        c.classList.remove(css.selected);\n        c.style.background = \"transparent\";\n        c.style.color = this.options.clockItemColor;\n    }\n}","import ClockHeader from \"./clockHeader\";\nimport ClockFace from \"./face/clockFace\";\nimport Config, {DOM} from \"./meta/config\";\nimport formatTime from \"./timeFormatter\";\n\nexport default class Clock {\n\n    constructor(options, time) {\n        this.options = options;\n\n        this.initView();\n        this.time = time;\n        this.initElements();\n    }\n\n    initView() {\n        this.submitButton = document.getElementById(DOM.submitId);\n        this.submitButton.onclick = () => {\n            const time = this.time;\n            time.formatted = () => formatTime(time, this.options.meridiem);\n            this.options.onSubmit(time);\n            Clock.dispose();\n        };\n\n        this.cancelButton = document.getElementById(DOM.cancelId);\n        this.cancelButton.onclick = () => {\n            this.options.onCancel();\n            Clock.dispose();\n        };\n    }\n\n    initElements() {\n        this.header = new ClockHeader({\n            options: this.options,\n            time: this.time,\n            onHourClicked: () => this.toggleToHours(),\n            onMinutesClicked: () => this.toggleToMinutes()\n        });\n        this.clockFace = new ClockFace(this.options, this.time, (time, type) => this.onTimeUpdate(time, type));\n    }\n\n    onStart() {\n        this.clockFace.onStart();\n    }\n\n    toggleToHours() {\n        this.clockFace.toggleToHours();\n    }\n\n    toggleToMinutes() {\n        this.clockFace.toggleToMinutes();\n    }\n\n    onTimeUpdate(time, type) {\n        this.time = time;\n        this.header.time = time;\n        this.header.updateDisplayedTime();\n        if (type === Config.FaceType.MINUTES)\n            this.header.toggleActiveToMinutes();\n\n    }\n\n    static dispose() {\n        document.body.removeChild(document.getElementById(Config.clockId));\n    }\n}","import {css, DOM} from \"./meta/config\";\n\nexport default function styleColors(options) {\n    document.getElementById(DOM.headerId).style.background = options.headerBackground;\n    document.getElementById(DOM.headerId).style.color = options.headerColor;\n    document.getElementById(DOM.wrapperId).style.background = options.wrapperBackground;\n    document.getElementById(DOM.clockId).style.background = options.clockBackground;\n    document.getElementById(DOM.handId).style.background = options.handColor;\n    document.getElementById(DOM.dotId).style.background = options.handColor;\n    document.getElementById(DOM.buttonsId).style.background = options.footerBackground;\n    document.getElementById(DOM.submitId).style.color = options.submitColor;\n    document.getElementById(DOM.cancelId).style.color = options.cancelColor;\n\n    changeColor(css.clockItem, options.clockItemColor);\n    changeColor(css.inner, options.clockItemInnerColor);\n    changeColor(css.outer, options.handColor, \"borderColor\");\n}\n\nfunction changeColor(className, color, property = \"color\") {\n    const items = Array.from(document.getElementsByClassName(className));\n    for (const item of items)\n        item.style[property] = color;\n}\n","import clockHtml from \"./meta/clockHtml\";\nimport Config from \"./meta/config\";\nimport Clock from \"./clock\";\nimport styleColors from \"./colorStylists\";\nimport getTime from \"./timeExtractor\";\n\n\nexport default function showPicker(config = {}) {\n    \n    const options = Object.assign({}, Config.clockConfig, config);\n    createDom(options);\n    const time = getTime(options.time, options.meridiem);\n\n    const clock = new Clock(options, time);\n    styleColors(options);\n    clock.onStart();\n}\n\n\nfunction createDom(options) {\n    if (document.getElementById(Config.clockId))\n        throw Error(\"There is already one running grudus-timepicker instance!\");\n\n    const clockDiv = document.createElement(\"div\");\n    clockDiv.id = Config.clockId;\n    clockDiv.innerHTML = clockHtml(options);\n    document.body.appendChild(clockDiv);\n}\n","import formatTime from \"./timeFormatter\";\nimport showPicker from \"./timepickerCreator\";\n\nexport default {\n    showPicker: (config) => showPicker(config),\n    format: (time) => formatTime(time)\n};\n\n"],"names":["hoursRegex","minutesRegex","regex","extractTime","date","hasMeridiem","test","hours","minutes","undefined","meridiem","length","parseInt","parsed","exec","fromRegex","Date","fromDate","TypeError","JSON","stringify","getHours","getMinutes","getTimeWithMeridiem","time","extractedTime","options","arrayTemplate","push","join","nextTemplate","labels","cancel","ok","concat","css","DOM","clockId","clockConfig","FaceType","HOURS","MINUTES","ClockHeader","headerHours","document","getElementById","hoursId","onclick","toggleActiveToHours","onHourClicked","headerMinutes","minutesId","toggleActiveToMinutes","onMinutesClicked","this","headerAm","gTimeAmId","headerPm","gTimePmId","toogleActiveMeridiemAm","toogleActiveMeridiemPm","defaultToggleActiveMeridiem","updateDisplayedTime","toggleActive","objectToRemoveClass","objectToAddClass","style","color","headerColor","headerSelected","doUpdateDisplayedTime","node","value","innerText","config","initView","MinutesFace","selected","findSelected","colorSelected","updateMinutes","removeSelected","angle","minute","Math","round","items","clockItems","outerClockItems","isOuter","classList","add","background","handColor","remove","clockItemColor","indexOf","initialMinutes","displayed","type","Config","HoursFace","innerClockElem","display","isInnerClock","hoursIndex","radius","innerClockItems","updateHours","elem","index","selectedAngle","isInner","clockItemInnerColor","Array","from","initialHours","displayedInner","Promise","delay","fn","t","resolve","then","prototype","toRadians","PI","toDegrees","findMousePosition","event","object","rect","getBoundingClientRect","clientX","left","clientY","top","face","doCreate","clockElem","span","item","i","inner","createElement","outer","appendChild","size","width","offsetWidth","height","offsetHeight","middle","x","y","itemsRadius","doCalculateSize","innerWidth","innerHeight","fun","middleX","middleY","angleQuantum","Utils","itemWidth","itemHeight","sin","bottom","cos","ClockFace","innerId","handOfAClock","handId","onmousedown","_this","isMouseDown","onmouseup","toggleToMinutes","e","stopPropagation","onmousemove","selectTime","initialTime","minutesFace","_this2","hoursFace","currentFace","onEnter","clockFaceCreator","ClockFaceCreator","create","calculateSize","mouse","atan","array","forEach","call","c","calculateHandOfTheClock","onTimeUpdate","transform","onLeave","toggleTime","onEachClockElement","fadeOut","changeDisplayed","_this3","initViews","initTimeFaces","createFace","Clock","submitButton","submitId","formatted","formatTime","onSubmit","dispose","cancelButton","cancelId","onCancel","header","toggleToHours","clockFace","onStart","body","removeChild","initElements","changeColor","className","property","getElementsByClassName","showPicker","Object","assign","Error","clockDiv","id","innerHTML","clockHtml","getTime","clock","headerId","headerBackground","wrapperId","wrapperBackground","clockBackground","dotId","buttonsId","footerBackground","submitColor","cancelColor","clockItem"],"mappings":"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"}