{"version":3,"file":"grudus-timepicker.es5.js","sources":["../src/js/timeExtractor.js","../src/js/timeFormatter.js","../src/js/meta/clockHtml.js","../src/js/meta/config.js","../src/js/clockHeader.js","../src/js/face/minutesFace.js","../src/js/face/hoursFace.js","../src/js/meta/utils.js","../src/js/face/clockFaceCreator.js","../src/js/face/clockFace.js","../src/js/clock.js","../src/js/colorStylists.js","../src/js/timepickerCreator.js","../src/js/index.js"],"sourcesContent":["const hoursRegex = /^([0-1]?[0-9]|2[0-3])$/;\nconst minutesRegex = /^([0-5]?[0-9])$/;\nconst regex = /^([0-1]?[0-9]|2[0-3]):([0-5][0-9])$/;\n\nexport default function extractTime(date) {\n    if (!date)\n        return fromDate(new Date());\n    else if (date instanceof Date)\n        return fromDate(date);\n    else if (hoursRegex.test(date.hours) && minutesRegex.test(date.minutes))\n        return {hours: parseInt(date.hours), minutes: parseInt(date.minutes)};\n    else if (regex.test(date))\n        return fromRegex(date);\n    else\n        throw new TypeError(`INVALID FORMAT: {${JSON.stringify(date)}}.\n            Time must be a Date or 'hh:MM' string or object with 'hours' and 'minutes' fields`);\n}\n\nfunction fromRegex(date) {\n    const parsed = regex.exec(date);\n    return {hours: parseInt(parsed[1]), minutes: parseInt(parsed[2])};\n}\n\nfunction fromDate(date) {\n    return {hours: date.getHours(), minutes: date.getMinutes()};\n}","import extractTime from \"./timeExtractor\";\n\nexport default function (time) {\n    const extractedTime = extractTime(time);\n    return (extractedTime.hours < 10 ? \"0\" + extractedTime.hours : extractedTime.hours)\n        + \":\" + (extractedTime.minutes < 10 ? \"0\" + extractedTime.minutes : extractedTime.minutes);\n}","export default \"<section class='g-time-wrapper'>\\n\" +\n\"    <header class='g-head g-flex' id='g-head'>\\n\" +\n\"        <section class='g-head-content'>\\n\" +\n\"            <span class='g-current g-hour g-active g-pointer' id='g-hours'>21</span>\\n\" +\n\"            <span class='g-current'>:</span>\\n\" +\n\"            <span class='g-current g-minute g-pointer' id='g-minutes'>37</span>\\n\" +\n\"            <button id='g-time-am' class='g-button-zone g-am g-pointer'>AM</button>\\n\" +\n\"            <button id='g-time-pm' class='g-button-zone g-pm g-pointer'>PM</button>\\n\" +\n\"        </section>\\n\" +\n\"    </header>\\n\" +\n\"\\n\" +\n\"\\n\" +\n\"    <section class='g-clock-wrapper g-flex' id='g-clock-wrapper'>\\n\" +\n\"        <div class='g-clock' id='g-clock'>\" +\n\"            <span class='g-middle-dot' id='g-middle-dot'></span>\\n\" +\n\"            <div class='g-hand-of-a-clock' id='g-hand-of-a-clock'></div>\\n\" +\n\"            <div class='g-clock g-clock-inner' id='g-clock-inner'></div>\\n\" +\n\"        </div>\\n\" +\n\"    </section>\\n\" +\n\"\\n\" +\n\"\\n\" +\n\"    <footer class='g-buttons g-flex' id='g-buttons'>\\n\" +\n\"        <button id='g-time-cancel' class='g-button g-cancel g-pointer'>Cancelar</button>\\n\" +\n\"        <button id='g-time-submit' class='g-button g-submit g-pointer'>Aceptar</button>\\n\" +\n\"    </footer>\\n\" +\n\"\\n\" +\n\"</section>\";","const clockId = \"grudus-clock\";\n\nconst defaultConfig = {\n    onSubmit: () => {\n    },\n    onCancel: () => {\n    },\n    headerBackground: \"#1976D2\",\n    headerColor: \"#c7d6e1\",\n    headerSelected: \"#ffffff\",\n    wrapperBackground: \"#f0fff0\",\n    footerBackground: \"#f0fff0\",\n    submitColor: \"#1976D2\",\n    cancelColor: \"#1976D2\",\n    clockBackground: \"#CFD8DC\",\n    clockItemColor: \"#212121\",\n    clockItemInnerColor: \"#212121\",\n    handColor: \"#1976D2\"\n};\n\nconst FaceType = {HOURS: \"hours\", MINUTES: \"minutes\"};\n\nconst css = {\n    clock: \"g-clock\",\n    clockItem: \"g-clock-item\",\n    inner: \"g-clock-inner\",\n    outer: \"g-clock-outer\",\n    item: \"g-clock-item\",\n    hand: \"g-hand-of-a-clock\",\n    fadeOut: \"g-fade-out\",\n    selected: \"g-selected\",\n    active: \"g-active\",\n    submit: \"g-submit\",\n    cancel: \"g-cancel\",\n    hour: \"g-hour\",\n    minute: \"g-minute\"\n};\n\nconst DOM = {\n    headerId: \"g-head\",\n    hoursId: \"g-hours\",\n    minutesId: \"g-minutes\",\n    clockId: \"g-clock\",\n    innerId: \"g-clock-inner\",\n    wrapperId: \"g-clock-wrapper\",\n    dotId: \"g-middle-dot\",\n    handId: \"g-hand-of-a-clock\",\n    buttonsId: \"g-buttons\",\n    submitId: \"g-time-submit\",\n    cancelId: \"g-time-cancel\"\n};\n\nexport default {clockId, clockConfig: defaultConfig, FaceType};\nexport {css, DOM};","import {DOM} from \"./meta/config\";\n\nexport default class ClockHeader {\n\n    constructor(config) {\n        this.options = config.options;\n        this.time = config.time;\n        this.onHourClicked = config.onHourClicked;\n        this.onMinutesClicked = config.onMinutesClicked;\n\n        this.initView();\n    }\n\n    initView() {\n        this.headerHours = document.getElementById(DOM.hoursId);\n        this.headerHours.onclick = () => {\n            this.toggleActiveToHours();\n            this.onHourClicked();\n        };\n\n        this.headerMinutes = document.getElementById(DOM.minutesId);\n        this.headerMinutes.onclick = () => {\n            this.toggleActiveToMinutes();\n            this.onMinutesClicked();\n        };\n\n        this.updateDisplayedTime();\n        this.toggleActiveToHours();\n    }\n\n    toggleActiveToMinutes() {\n        this.toggleActive(this.headerHours, this.headerMinutes);\n    }\n\n    toggleActiveToHours() {\n        this.toggleActive(this.headerMinutes, this.headerHours);\n    }\n\n    toggleActive(objectToRemoveClass, objectToAddClass) {\n        objectToRemoveClass.style.color = this.options.headerColor;\n        objectToAddClass.style.color = this.options.headerSelected;\n    }\n\n    updateDisplayedTime() {\n        ClockHeader.doUpdateDisplayedTime(this.headerHours, this.time.hours);\n        ClockHeader.doUpdateDisplayedTime(this.headerMinutes, this.time.minutes);\n    }\n\n    static doUpdateDisplayedTime(node, value) {\n        if (value < 10)\n            node.innerText = \"0\" + value;\n        else node.innerText = value;\n    }\n}","import Config, {css} from \"../meta/config\";\n\nexport default class MinutesFace {\n\n    constructor(items, initialMinutes, updateMinutes) {\n        this.displayed = [\"00\", \"05\", \"10\", \"15\", \"20\", \"25\", \"30\", \"35\", \"40\", \"45\", \"50\", \"55\"];\n        this.options = items.options;\n        this.type = Config.FaceType.MINUTES;\n        this.selected = undefined;\n        this.items = items;\n        this.minutes = initialMinutes;\n        this.updateMinutes = updateMinutes;\n    }\n\n    onEnter() {\n        this.selected = this.findSelected(this.minutes);\n        this.colorSelected();\n        this.updateMinutes(this.minutes, this.minutes * 6);\n    }\n\n    onLeave() {\n        if (this.selected) {\n            this.removeSelected();\n            this.selected = undefined;\n        }\n    }\n\n    selectTime(angle) {\n        if (this.selected)\n            this.removeSelected();\n\n        const minute = Math.round(angle / 6) % 60;\n        this.selected = this.findSelected(minute);\n        this.colorSelected();\n        this.minutes = minute;\n        this.updateMinutes(this.minutes, angle);\n    }\n\n    findSelected(minute) {\n        return (minute % 5 === 0) ? this.items.clockItems[minute / 5] : this.items.outerClockItems[minute];\n    }\n\n    colorSelected() {\n        if (this.isOuter()) {\n            this.selected.classList.add(css.selected);\n            return;\n        }\n        this.selected.style.background = this.options.handColor;\n        this.selected.style.color = \"whitesmoke\";\n    }\n\n    removeSelected() {\n        if (this.isOuter()) {\n            this.selected.classList.remove(css.selected);\n            return;\n        }\n        this.selected.style.background = \"transparent\";\n        this.selected.style.color = this.options.clockItemColor;\n    }\n\n    isOuter() {\n        return this.items.outerClockItems.indexOf(this.selected) > -1;\n    }\n}","import Config from \"../meta/config\";\n\nexport default class HoursFace {\n\n    constructor(items, initialHours, updateHours) {\n        this.displayed = [\"12\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\"];\n        this.displayedInner = [\"00\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\"];\n        this.type = Config.FaceType.MINUTES;\n        this.selected = undefined;\n        this.options = items.options;\n\n        this.items = items;\n        this.hours = initialHours;\n        this.updateHours = updateHours;\n    }\n\n    onEnter() {\n        this.items.innerClockElem.style.display = \"block\";\n        const isInnerClock = this.hours < 13 && this.hours !== 0;\n        const hoursIndex = this.hours % 12;\n        this.selected = isInnerClock ? this.items.clockItems[hoursIndex] : this.items.innerClockItems[hoursIndex];\n        this.colorSelected();\n\n        this.updateHours(this.hours, hoursIndex * 30, isInnerClock ? this.items.radius : this.items.radius - 50);\n    }\n\n    onLeave() {\n        this.items.innerClockElem.style.display = \"none\";\n        if (this.selected) {\n            this.removeSelected();\n            this.selected = undefined;\n        }\n    }\n\n    selectTime(angle, elem) {\n        if (this.selected)\n            this.removeSelected();\n\n        const index = Math.round(angle / 30) % 12;\n        this.selected = (elem === this.items.innerClockElem\n            ? this.items.innerClockItems\n            : this.items.clockItems)[index];\n\n        this.colorSelected();\n        this.hours = parseInt(this.selected.innerText);\n        const selectedAngle = Math.round(angle / 30) * 30;\n\n        this.updateHours(this.hours, selectedAngle,\n            elem === this.items.innerClockElem ? this.items.radius - 50 : this.items.radius);\n    }\n\n    colorSelected() {\n        this.selected.style.background = this.options.handColor;\n        this.selected.style.color = \"#ffffff\";\n    }\n\n    removeSelected() {\n        this.selected.style.background = \"transparent\";\n        this.selected.style.color = this.isInner()\n            ? this.options.clockItemInnerColor\n            : this.options.clockItemColor;\n    }\n\n    isInner() {\n        return Array.from(this.items.innerClockItems).indexOf(this.selected) > -1;\n    }\n}","function toRadians(angle) {\n    return angle * (Math.PI / 180);\n}\n\nfunction toDegrees(angle) {\n    return angle * (180 / Math.PI);\n}\n\nfunction findMousePosition(event, object) {\n    const rect = object.getBoundingClientRect();\n    return {\n        x: event.clientX - rect.left,\n        y: event.clientY - rect.top\n    };\n}\n\nfunction delay(t) {\n    return new Promise(function (resolve) {\n        setTimeout(resolve, t);\n    });\n}\n\nPromise.delay = function (fn, t) {\n    if (!t) {\n        t = fn;\n        fn = function () {\n        };\n    }\n    return delay(t).then(fn);\n};\n\nPromise.prototype.delay = function (fn, t) {\n    return this.then(function () {\n        return Promise.delay(fn, t);\n    });\n};\n\nexport default {toRadians, toDegrees, findMousePosition};","import Utils from \"../meta/utils\";\nimport {css} from \"../meta/config\";\n\nexport default class ClockFaceCreator {\n\n    constructor(clockElem, innerClockElem) {\n        this.clockElem = clockElem;\n        this.innerClockElem = innerClockElem;\n        this.size = {};\n        this.middle = {};\n    }\n\n    create(clockItems, innerClockItems, outerClockItems, face) {\n        ClockFaceCreator.doCreate(clockItems, this.clockElem, span => span.classList.add(css.item));\n        ClockFaceCreator.doCreate(innerClockItems, this.innerClockElem, (span, i) => {\n            span.classList.add(css.item, css.inner);\n            span.innerText = face.displayedInner[i];\n        });\n\n        for (let i = 0; i < 60; i++) {\n            const span = document.createElement(\"span\");\n            span.classList.add(css.outer);\n            outerClockItems.push(span);\n            this.clockElem.appendChild(span);\n        }\n    }\n\n    static doCreate(clockItems, clockElem, fun) {\n        for (let i = 0; i < 12; i++) {\n            const span = document.createElement(\"span\");\n            fun(span, i);\n            clockItems.push(span);\n            clockElem.appendChild(span);\n        }\n    }\n\n    calculateSize(clockItems, innerClockItems, outerClockItems) {\n        this.size.width = this.clockElem.offsetWidth;\n        this.size.height = this.clockElem.offsetHeight;\n        this.middle.x = this.size.width / 2;\n        this.middle.y = this.size.height / 2;\n        this.itemsRadius = this.size.width / 2 - 20;\n\n        const innerWidth = this.innerClockElem.offsetWidth;\n        const innerHeight = this.innerClockElem.offsetHeight;\n        const middleX = innerWidth / 2;\n        const middleY = innerHeight / 2;\n\n        ClockFaceCreator.doCalculateSize(this.middle.x, this.middle.y, this.itemsRadius, clockItems);\n        ClockFaceCreator.doCalculateSize(middleX, middleY, this.itemsRadius - 40, innerClockItems);\n        ClockFaceCreator.doCalculateSize(this.middle.x, this.middle.y, this.itemsRadius, outerClockItems);\n    }\n\n    static doCalculateSize(middleX, middleY, radius, items) {\n        const angleQuantum = 360 / items.length;\n        for (let i = 0; i < items.length; i++) {\n\n            const angle = Utils.toRadians(i * angleQuantum);\n            const item = items[i];\n            const itemWidth = item.offsetWidth;\n            const itemHeight = item.offsetHeight;\n\n            item.style.left = ((middleX + Math.sin(angle) * radius) - itemWidth / 2) + \"px\";\n            item.style.bottom = ((middleY + Math.cos(angle) * radius) - itemHeight / 2) + \"px\";\n        }\n    }\n}","import MinutesFace from \"./minutesFace\";\nimport HoursFace from \"./hoursFace\";\nimport Utils from \"../meta/utils\";\nimport Config, {css, DOM} from \"../meta/config\";\nimport ClockFaceCreator from \"./clockFaceCreator\";\n\nexport default class ClockFace {\n\n    constructor(options, initialTime, onTimeUpdate) {\n        this.options = options;\n        this.time = initialTime;\n        this.onTimeUpdate = onTimeUpdate;\n        this.isMouseDown = false;\n        this.clockItems = [];\n        this.innerClockItems = [];\n        this.outerClockItems = [];\n        this.size = {};\n        this.middle = {};\n\n        this.initViews();\n        this.initTimeFaces(initialTime);\n        this.createFace();\n\n        this.hoursFace.items.radius = this.itemsRadius;\n\n        this.currentFace = this.hoursFace;\n        this.changeDisplayed(this.currentFace.displayed);\n    }\n\n    initViews() {\n        this.clockElem = document.getElementById(DOM.clockId);\n        this.innerClockElem = document.getElementById(DOM.innerId);\n        this.handOfAClock = document.getElementById(DOM.handId);\n\n        this.clockElem.onmousedown = () => this.isMouseDown = true;\n        this.clockElem.onmouseup = () => {this.isMouseDown = false;\n            this.toggleToMinutes();\n        };\n\n        this.handOfAClock.onmouseup = (e) => e.stopPropagation();\n        this.handOfAClock.onmousemove = (e) => e.stopPropagation();\n        this.handOfAClock.onclick = (e) => e.stopPropagation();\n\n        this.clockElem.onmousemove = (e) => this.selectTime(e, false, this.clockElem);\n        this.clockElem.onclick = (e) => this.selectTime(e, true, this.clockElem);\n\n        this.innerClockElem.onmousemove = (e) => this.selectTime(e, false, this.innerClockElem);\n        this.innerClockElem.onclick = (e) => this.selectTime(e, true, this.innerClockElem);\n    }\n\n    initTimeFaces(initialTime) {\n        this.minutesFace = new MinutesFace({\n            options: this.options,\n            clockItems: this.clockItems,\n            outerClockItems: this.outerClockItems\n        }, initialTime.minutes, (minutes, angle) => this.updateMinutes(minutes, angle));\n\n        this.hoursFace = new HoursFace({\n            options: this.options,\n            innerClockItems: this.innerClockItems,\n            clockItems: this.clockItems,\n            innerClockElem: this.innerClockElem\n        }, initialTime.hours, (hours, angle, radius) => this.updateHours(hours, angle, radius));\n    }\n\n    onStart() {\n        this.currentFace.onEnter();\n    }\n\n    createFace() {\n        const clockFaceCreator = new ClockFaceCreator(this.clockElem, this.innerClockElem);\n        clockFaceCreator.create(this.clockItems, this.innerClockItems, this.outerClockItems, this.hoursFace);\n        clockFaceCreator.calculateSize(this.clockItems, this.innerClockItems, this.outerClockItems);\n\n        this.size = clockFaceCreator.size;\n        this.middle = clockFaceCreator.middle;\n        this.itemsRadius = clockFaceCreator.itemsRadius;\n    }\n\n    selectTime(event, isMouseDown, elem) {\n        if (!(isMouseDown || this.isMouseDown))\n            return;\n        const mouse = Utils.findMousePosition(event, this.clockElem);\n        const x = mouse.x - this.middle.x;\n        const y = this.middle.y - mouse.y;\n        let angle = 90 - Utils.toDegrees(Math.atan(y / x));\n        if (x < 0) angle += 180;\n\n        this.currentFace.selectTime(angle, elem);\n        event.stopPropagation();\n    }\n\n    changeDisplayed(array) {\n        for (let i = 0; i < this.clockItems.length; i++)\n            this.clockItems[i].innerText = array[i];\n    }\n\n    onEachClockElement(fun) {\n        [].forEach.call(this.clockItems, c => fun(c));\n    }\n\n    updateMinutes(minutes, angle) {\n        this.time.minutes = minutes;\n        this.calculateHandOfTheClock(angle, this.itemsRadius);\n        this.onTimeUpdate(this.time, Config.FaceType.MINUTES);\n    }\n\n    updateHours(hours, angle, radius) {\n        this.time.hours = hours;\n        this.calculateHandOfTheClock(angle, radius);\n        this.onTimeUpdate(this.time, Config.FaceType.HOURS);\n    }\n\n    calculateHandOfTheClock(angle, size = this.itemsRadius) {\n        this.handOfAClock.style.transform = `rotate(${angle - 90}deg)`;\n        this.handOfAClock.style.width = size + \"px\";\n    }\n\n    toggleToHours() {\n        this.minutesFace.onLeave();\n        this.toggleTime(this.hoursFace);\n    }\n\n    toggleToMinutes() {\n        this.hoursFace.onLeave();\n        this.toggleTime(this.minutesFace);\n    }\n\n    toggleTime(face) {\n        if (this.currentFace !== face) {\n            this.onEachClockElement(c => c.classList.add(css.fadeOut));\n            this.handOfAClock.classList.add(css.fadeOut);\n            Promise.delay(() => {\n                this.onEachClockElement(c => c.classList.remove(css.fadeOut));\n                this.handOfAClock.classList.remove(css.fadeOut);\n                this.changeDisplayed(face.displayed);\n                this.currentFace = face;\n                this.onEachClockElement(c => this.removeSelected(c));\n                face.onEnter();\n            }, 300);\n        }\n    }\n\n    removeSelected(c) {\n        c.classList.remove(css.selected);\n        c.style.background = \"transparent\";\n        c.style.color = this.options.clockItemColor;\n    }\n}","import ClockHeader from \"./clockHeader\";\nimport ClockFace from \"./face/clockFace\";\nimport Config, {DOM} from \"./meta/config\";\nimport formatTime from \"./timeFormatter\";\n\nexport default class Clock {\n\n    constructor(options, time) {\n        this.options = options;\n\n        this.initView();\n        this.time = time;\n        this.initElements();\n    }\n\n    initView() {\n        this.submitButton = document.getElementById(DOM.submitId);\n        this.submitButton.onclick = () => {\n            const time = this.time;\n            time.formatted = () => formatTime(time);\n            this.options.onSubmit(time);\n            Clock.dispose();\n        };\n\n        this.cancelButton = document.getElementById(DOM.cancelId);\n        this.cancelButton.onclick = () => {\n            this.options.onCancel();\n            Clock.dispose();\n        };\n    }\n\n    initElements() {\n        this.header = new ClockHeader({\n            options: this.options,\n            time: this.time,\n            onHourClicked: () => this.toggleToHours(),\n            onMinutesClicked: () => this.toggleToMinutes()\n        });\n        this.clockFace = new ClockFace(this.options, this.time, (time, type) => this.onTimeUpdate(time, type));\n    }\n\n    onStart() {\n        this.clockFace.onStart();\n    }\n\n    toggleToHours() {\n        this.clockFace.toggleToHours();\n    }\n\n    toggleToMinutes() {\n        this.clockFace.toggleToMinutes();\n    }\n\n    onTimeUpdate(time, type) {\n        this.time = time;\n        this.header.time = time;\n        this.header.updateDisplayedTime();\n        if (type === Config.FaceType.MINUTES)\n            this.header.toggleActiveToMinutes();\n\n    }\n\n    static dispose() {\n        document.body.removeChild(document.getElementById(Config.clockId));\n    }\n}","import {css, DOM} from \"./meta/config\";\n\nexport default function styleColors(options) {\n    document.getElementById(DOM.headerId).style.background = options.headerBackground;\n    document.getElementById(DOM.headerId).style.color = options.headerColor;\n    document.getElementById(DOM.wrapperId).style.background = options.wrapperBackground;\n    document.getElementById(DOM.clockId).style.background = options.clockBackground;\n    document.getElementById(DOM.handId).style.background = options.handColor;\n    document.getElementById(DOM.dotId).style.background = options.handColor;\n    document.getElementById(DOM.buttonsId).style.background = options.footerBackground;\n    document.getElementById(DOM.submitId).style.color = options.submitColor;\n    document.getElementById(DOM.cancelId).style.color = options.cancelColor;\n\n    changeColor(css.clockItem, options.clockItemColor);\n    changeColor(css.inner, options.clockItemInnerColor);\n    changeColor(css.outer, options.handColor, \"borderColor\");\n}\n\nfunction changeColor(className, color, property = \"color\") {\n    const items = Array.from(document.getElementsByClassName(className));\n    for (const item of items)\n        item.style[property] = color;\n}\n","import clockHtml from \"./meta/clockHtml\";\nimport Config from \"./meta/config\";\nimport Clock from \"./clock\";\nimport styleColors from \"./colorStylists\";\nimport getTime from \"./timeExtractor\";\n\n\nexport default function showPicker(config = {}) {\n    createDom();\n\n    const options = Object.assign({}, Config.clockConfig, config);\n    const time = getTime(options.time);\n\n    const clock = new Clock(options, time);\n    styleColors(options);\n    clock.onStart();\n}\n\n\nfunction createDom() {\n    if (document.getElementById(Config.clockId))\n        throw Error(\"There is already one running grudus-timepicker instance!\");\n\n    const clockDiv = document.createElement(\"div\");\n    clockDiv.id = Config.clockId;\n    clockDiv.innerHTML = clockHtml;\n    document.body.appendChild(clockDiv);\n}\n","import formatTime from \"./timeFormatter\";\nimport showPicker from \"./timepickerCreator\";\n\nexport default {\n    showPicker: (config) => showPicker(config),\n    format: (time) => formatTime(time)\n};\n\n"],"names":["hoursRegex","minutesRegex","regex","extractTime","date","Date","fromDate","test","hours","minutes","parseInt","parsed","exec","fromRegex","TypeError","JSON","stringify","getHours","getMinutes","time","extractedTime","css","DOM","clockId","clockConfig","FaceType","HOURS","MINUTES","ClockHeader","headerHours","document","getElementById","hoursId","onclick","toggleActiveToHours","onHourClicked","headerMinutes","minutesId","toggleActiveToMinutes","onMinutesClicked","updateDisplayedTime","toggleActive","this","objectToRemoveClass","objectToAddClass","style","color","options","headerColor","headerSelected","doUpdateDisplayedTime","node","value","innerText","config","initView","MinutesFace","selected","findSelected","colorSelected","updateMinutes","removeSelected","undefined","angle","minute","Math","round","items","clockItems","outerClockItems","isOuter","classList","add","background","handColor","remove","clockItemColor","indexOf","initialMinutes","displayed","type","Config","HoursFace","innerClockElem","display","isInnerClock","hoursIndex","innerClockItems","updateHours","radius","elem","index","selectedAngle","isInner","clockItemInnerColor","Array","from","initialHours","displayedInner","Promise","delay","fn","t","resolve","then","prototype","toRadians","PI","toDegrees","findMousePosition","event","object","rect","getBoundingClientRect","clientX","left","clientY","top","face","doCreate","clockElem","span","item","i","inner","createElement","outer","push","appendChild","size","width","offsetWidth","height","offsetHeight","middle","x","y","itemsRadius","middleX","middleY","doCalculateSize","fun","angleQuantum","length","Utils","itemWidth","itemHeight","sin","bottom","cos","ClockFace","innerId","handOfAClock","handId","onmousedown","_this","isMouseDown","onmouseup","toggleToMinutes","e","stopPropagation","onmousemove","selectTime","initialTime","minutesFace","_this2","hoursFace","currentFace","onEnter","clockFaceCreator","ClockFaceCreator","create","calculateSize","mouse","atan","array","forEach","call","c","calculateHandOfTheClock","onTimeUpdate","transform","onLeave","toggleTime","onEachClockElement","fadeOut","changeDisplayed","_this3","initViews","initTimeFaces","createFace","Clock","submitButton","submitId","formatted","formatTime","onSubmit","dispose","cancelButton","cancelId","onCancel","header","toggleToHours","clockFace","onStart","body","removeChild","initElements","changeColor","className","property","getElementsByClassName","showPicker","Error","clockDiv","id","innerHTML","clockHtml","Object","assign","getTime","clock","headerId","headerBackground","wrapperId","wrapperBackground","clockBackground","dotId","buttonsId","footerBackground","submitColor","cancelColor","clockItem"],"mappings":";;sLAAA,IAAMA,EAAa,yBACbC,EAAe,kBACfC,EAAQ,sCAEd,SAAwBC,EAAYC,MAC3BA,EAEA,CAAA,GAAIA,aAAgBC,KACrB,OAAOC,EAASF,GACf,GAAIJ,EAAWO,KAAKH,EAAKI,QAAUP,EAAaM,KAAKH,EAAKK,SAC3D,MAAO,CAACD,MAAOE,SAASN,EAAKI,OAAQC,QAASC,SAASN,EAAKK,UAC3D,GAAIP,EAAMK,KAAKH,GAChB,OAMR,SAAmBA,OACTO,EAAST,EAAMU,KAAKR,SACnB,CAACI,MAAOE,SAASC,EAAO,IAAKF,QAASC,SAASC,EAAO,KARlDE,CAAUT,GAEjB,MAAM,IAAIU,8BAA8BC,KAAKC,UAAUZ,wGARvD,OAAOE,EAAS,IAAID,MAiB5B,SAASC,EAASF,SACP,CAACI,MAAOJ,EAAKa,WAAYR,QAASL,EAAKc,cCtBnC,WAAUC,OACfC,EAAgBjB,EAAYgB,UAC1BC,EAAcZ,MAAQ,GAAK,IAAMY,EAAcZ,MAAQY,EAAcZ,OACvE,KAAOY,EAAcX,QAAU,GAAK,IAAMW,EAAcX,QAAUW,EAAcX,6GCL3E,gpCCsBTY,EAAM,OACD,oBACI,qBACJ,sBACA,qBACD,oBACA,4BACG,sBACC,oBACF,kBACA,kBACA,gBACF,gBACE,YAGNC,EAAM,UACE,iBACD,oBACE,oBACF,kBACA,0BACE,wBACJ,sBACC,8BACG,qBACD,yBACA,mBAGC,CAACC,QApDA,eAoDSC,YAlDH,UACR,sBAEA,8BAEQ,sBACL,yBACG,4BACG,2BACD,sBACL,sBACA,0BACI,yBACD,8BACK,oBACV,WAmCsCC,SAhCpC,CAACC,MAAO,QAASC,QAAS,gPClBtBC,yDAYRC,YAAcC,SAASC,eAAeT,EAAIU,cAC1CH,YAAYI,QAAU,aAClBC,wBACAC,sBAGJC,cAAgBN,SAASC,eAAeT,EAAIe,gBAC5CD,cAAcH,QAAU,aACpBK,0BACAC,yBAGJC,2BACAN,2EAIAO,aAAaC,KAAKb,YAAaa,KAAKN,kEAIpCK,aAAaC,KAAKN,cAAeM,KAAKb,kDAGlCc,EAAqBC,KACVC,MAAMC,MAAQJ,KAAKK,QAAQC,cAC9BH,MAAMC,MAAQJ,KAAKK,QAAQE,+DAIhCC,sBAAsBR,KAAKb,YAAaa,KAAKvB,KAAKX,SAClD0C,sBAAsBR,KAAKN,cAAeM,KAAKvB,KAAKV,yDAGvC0C,EAAMC,GAE3BD,EAAKE,UADLD,EAAQ,GACS,IAAMA,EACLA,oBA/CdE,kBACHP,QAAUO,EAAOP,aACjB5B,KAAOmC,EAAOnC,UACdgB,cAAgBmB,EAAOnB,mBACvBI,iBAAmBe,EAAOf,sBAE1BgB,eCRQC,6CAaRC,SAAWf,KAAKgB,aAAahB,KAAKjC,cAClCkD,qBACAC,cAAclB,KAAKjC,QAAwB,EAAfiC,KAAKjC,2CAIlCiC,KAAKe,gBACAI,sBACAJ,cAAWK,sCAIbC,GACHrB,KAAKe,UACLf,KAAKmB,qBAEHG,EAASC,KAAKC,MAAMH,EAAQ,GAAK,QAClCN,SAAWf,KAAKgB,aAAaM,QAC7BL,qBACAlD,QAAUuD,OACVJ,cAAclB,KAAKjC,QAASsD,wCAGxBC,UACDA,EAAS,GAAM,EAAKtB,KAAKyB,MAAMC,WAAWJ,EAAS,GAAKtB,KAAKyB,MAAME,gBAAgBL,2CAIvFtB,KAAK4B,eACAb,SAASc,UAAUC,IAAInD,EAAIoC,gBAG/BA,SAASZ,MAAM4B,WAAa/B,KAAKK,QAAQ2B,eACzCjB,SAASZ,MAAMC,MAAQ,uDAIxBJ,KAAK4B,eACAb,SAASc,UAAUI,OAAOtD,EAAIoC,gBAGlCA,SAASZ,MAAM4B,WAAa,mBAC5BhB,SAASZ,MAAMC,MAAQJ,KAAKK,QAAQ6B,yDAImB,EAArDlC,KAAKyB,MAAME,gBAAgBQ,QAAQnC,KAAKe,4BAzDvCU,EAAOW,EAAgBlB,kBAC1BmB,UAAY,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,WAC/EhC,QAAUoB,EAAMpB,aAChBiC,KAAOC,EAAOxD,SAASE,aACvB8B,cAAWK,OACXK,MAAQA,OACR1D,QAAUqE,OACVlB,cAAgBA,MCTRsB,6CAeRf,MAAMgB,eAAetC,MAAMuC,QAAU,YACpCC,EAAe3C,KAAKlC,MAAQ,IAAqB,IAAfkC,KAAKlC,MACvC8E,EAAa5C,KAAKlC,MAAQ,QAC3BiD,SAAW4B,EAAe3C,KAAKyB,MAAMC,WAAWkB,GAAc5C,KAAKyB,MAAMoB,gBAAgBD,QACzF3B,qBAEA6B,YAAY9C,KAAKlC,MAAoB,GAAb8E,EAAiBD,EAAe3C,KAAKyB,MAAMsB,OAAS/C,KAAKyB,MAAMsB,OAAS,2CAIhGtB,MAAMgB,eAAetC,MAAMuC,QAAU,OACtC1C,KAAKe,gBACAI,sBACAJ,cAAWK,sCAIbC,EAAO2B,GACVhD,KAAKe,UACLf,KAAKmB,qBAEH8B,EAAQ1B,KAAKC,MAAMH,EAAQ,IAAM,QAClCN,UAAYiC,IAAShD,KAAKyB,MAAMgB,eAC/BzC,KAAKyB,MAAMoB,gBACX7C,KAAKyB,MAAMC,YAAYuB,QAExBhC,qBACAnD,MAAQE,SAASgC,KAAKe,SAASJ,eAC9BuC,EAAyC,GAAzB3B,KAAKC,MAAMH,EAAQ,SAEpCyB,YAAY9C,KAAKlC,MAAOoF,EACzBF,IAAShD,KAAKyB,MAAMgB,eAAiBzC,KAAKyB,MAAMsB,OAAS,GAAK/C,KAAKyB,MAAMsB,qDAIxEhC,SAASZ,MAAM4B,WAAa/B,KAAKK,QAAQ2B,eACzCjB,SAASZ,MAAMC,MAAQ,wDAIvBW,SAASZ,MAAM4B,WAAa,mBAC5BhB,SAASZ,MAAMC,MAAQJ,KAAKmD,UAC3BnD,KAAKK,QAAQ+C,oBACbpD,KAAKK,QAAQ6B,wDAIqD,EAAjEmB,MAAMC,KAAKtD,KAAKyB,MAAMoB,iBAAiBV,QAAQnC,KAAKe,4BA5DnDU,EAAO8B,EAAcT,kBACxBT,UAAY,CAAC,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,WACtEmB,eAAiB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,WACpFlB,KAAOC,EAAOxD,SAASE,aACvB8B,cAAWK,OACXf,QAAUoB,EAAMpB,aAEhBoB,MAAQA,OACR3D,MAAQyF,OACRT,YAAcA,ECS3BW,QAAQC,MAAQ,SAAUC,EAAIC,UACrBA,MACGD,IACC,cATb,SAAeC,UACJ,IAAIH,QAAQ,SAAUI,cACdA,EAASD,KAUjBF,CAAME,GAAGE,KAAKH,IAGzBF,QAAQM,UAAUL,MAAQ,SAAUC,EAAIC,UAC7B5D,KAAK8D,KAAK,kBACNL,QAAQC,MAAMC,EAAIC,MAIjC,MAAe,CAACI,UArChB,SAAmB3C,UACRA,GAASE,KAAK0C,GAAK,MAoCHC,UAjC3B,SAAmB7C,UACRA,GAAS,IAAME,KAAK0C,KAgCOE,kBA7BtC,SAA2BC,EAAOC,OACxBC,EAAOD,EAAOE,8BACb,GACAH,EAAMI,QAAUF,EAAKG,OACrBL,EAAMM,QAAUJ,EAAKK,4CCArBjD,EAAYmB,EAAiBlB,EAAiBiD,KAChCC,SAASnD,EAAY1B,KAAK8E,UAAW,mBAAQC,EAAKlD,UAAUC,IAAInD,EAAIqG,UACpEH,SAAShC,EAAiB7C,KAAKyC,eAAgB,SAACsC,EAAME,KAC9DpD,UAAUC,IAAInD,EAAIqG,KAAMrG,EAAIuG,SAC5BvE,UAAYiE,EAAKpB,eAAeyB,SAGpC,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IAAK,KACnBF,EAAO3F,SAAS+F,cAAc,UAC/BtD,UAAUC,IAAInD,EAAIyG,SACPC,KAAKN,QAChBD,UAAUQ,YAAYP,0CAarBrD,EAAYmB,EAAiBlB,QAClC4D,KAAKC,MAAQxF,KAAK8E,UAAUW,iBAC5BF,KAAKG,OAAS1F,KAAK8E,UAAUa,kBAC7BC,OAAOC,EAAI7F,KAAKuF,KAAKC,MAAQ,OAC7BI,OAAOE,EAAI9F,KAAKuF,KAAKG,OAAS,OAC9BK,YAAc/F,KAAKuF,KAAKC,MAAQ,EAAI,OAInCQ,EAFahG,KAAKyC,eAAegD,YAEV,EACvBQ,EAFcjG,KAAKyC,eAAekD,aAEV,IAEbO,gBAAgBlG,KAAK4F,OAAOC,EAAG7F,KAAK4F,OAAOE,EAAG9F,KAAK+F,YAAarE,KAChEwE,gBAAgBF,EAASC,EAASjG,KAAK+F,YAAc,GAAIlD,KACzDqD,gBAAgBlG,KAAK4F,OAAOC,EAAG7F,KAAK4F,OAAOE,EAAG9F,KAAK+F,YAAapE,sCAvBrED,EAAYoD,EAAWqB,OAC9B,IAAIlB,EAAI,EAAGA,EAAI,GAAIA,IAAK,KACnBF,EAAO3F,SAAS+F,cAAc,UAChCJ,EAAME,KACCI,KAAKN,KACNO,YAAYP,4CAqBPiB,EAASC,EAASlD,EAAQtB,WACvC2E,EAAe,IAAM3E,EAAM4E,OACxBpB,EAAI,EAAGA,EAAIxD,EAAM4E,OAAQpB,IAAK,KAE7B5D,EAAQiF,EAAMtC,UAAUiB,EAAImB,GAC5BpB,EAAOvD,EAAMwD,GACbsB,EAAYvB,EAAKS,YACjBe,EAAaxB,EAAKW,eAEnBxF,MAAMsE,KAASuB,EAAUzE,KAAKkF,IAAIpF,GAAS0B,EAAUwD,EAAY,EAAK,OACtEpG,MAAMuG,OAAWT,EAAU1E,KAAKoF,IAAItF,GAAS0B,EAAUyD,EAAa,EAAK,wBA1D1E1B,EAAWrC,kBACdqC,UAAYA,OACZrC,eAAiBA,OACjB8C,KAAO,QACPK,OAAS,OCHDgB,0DAwBR9B,UAAY1F,SAASC,eAAeT,EAAIC,cACxC4D,eAAiBrD,SAASC,eAAeT,EAAIiI,cAC7CC,aAAe1H,SAASC,eAAeT,EAAImI,aAE3CjC,UAAUkC,YAAc,kBAAMC,EAAKC,aAAc,QACjDpC,UAAUqC,UAAY,aAAYD,aAAc,IAC5CE,wBAGJN,aAAaK,UAAY,SAACE,UAAMA,EAAEC,wBAClCR,aAAaS,YAAc,SAACF,UAAMA,EAAEC,wBACpCR,aAAavH,QAAU,SAAC8H,UAAMA,EAAEC,wBAEhCxC,UAAUyC,YAAc,SAACF,UAAMJ,EAAKO,WAAWH,GAAG,EAAOJ,EAAKnC,iBAC9DA,UAAUvF,QAAU,SAAC8H,UAAMJ,EAAKO,WAAWH,GAAG,EAAMJ,EAAKnC,iBAEzDrC,eAAe8E,YAAc,SAACF,UAAMJ,EAAKO,WAAWH,GAAG,EAAOJ,EAAKxE,sBACnEA,eAAelD,QAAU,SAAC8H,UAAMJ,EAAKO,WAAWH,GAAG,EAAMJ,EAAKxE,uDAGzDgF,mBACLC,YAAc,IAAI5G,EAAY,SACtBd,KAAKK,mBACFL,KAAK0B,2BACA1B,KAAK2B,iBACvB8F,EAAY1J,QAAS,SAACA,EAASsD,UAAUsG,EAAKzG,cAAcnD,EAASsD,UAEnEuG,UAAY,IAAIpF,EAAU,SAClBxC,KAAKK,wBACGL,KAAK6C,2BACV7C,KAAK0B,0BACD1B,KAAKyC,gBACtBgF,EAAY3J,MAAO,SAACA,EAAOuD,EAAO0B,UAAW4E,EAAK7E,YAAYhF,EAAOuD,EAAO0B,4CAI1E8E,YAAYC,mDAIXC,EAAmB,IAAIC,EAAiBhI,KAAK8E,UAAW9E,KAAKyC,kBAClDwF,OAAOjI,KAAK0B,WAAY1B,KAAK6C,gBAAiB7C,KAAK2B,gBAAiB3B,KAAK4H,aACzEM,cAAclI,KAAK0B,WAAY1B,KAAK6C,gBAAiB7C,KAAK2B,sBAEtE4D,KAAOwC,EAAiBxC,UACxBK,OAASmC,EAAiBnC,YAC1BG,YAAcgC,EAAiBhC,+CAG7B3B,EAAO8C,EAAalE,MACrBkE,GAAelH,KAAKkH,iBAEpBiB,EAAQ7B,EAAMnC,kBAAkBC,EAAOpE,KAAK8E,WAC5Ce,EAAIsC,EAAMtC,EAAI7F,KAAK4F,OAAOC,EAC1BC,EAAI9F,KAAK4F,OAAOE,EAAIqC,EAAMrC,EAC5BzE,EAAQ,GAAKiF,EAAMpC,UAAU3C,KAAK6G,KAAKtC,EAAID,IAC3CA,EAAI,IAAGxE,GAAS,UAEfwG,YAAYL,WAAWnG,EAAO2B,KAC7BsE,2DAGMe,OACP,IAAIpD,EAAI,EAAGA,EAAIjF,KAAK0B,WAAW2E,OAAQpB,SACnCvD,WAAWuD,GAAGtE,UAAY0H,EAAMpD,8CAG1BkB,MACZmC,QAAQC,KAAKvI,KAAK0B,WAAY,mBAAKyE,EAAIqC,2CAGhCzK,EAASsD,QACd5C,KAAKV,QAAUA,OACf0K,wBAAwBpH,EAAOrB,KAAK+F,kBACpC2C,aAAa1I,KAAKvB,KAAM8D,EAAOxD,SAASE,6CAGrCnB,EAAOuD,EAAO0B,QACjBtE,KAAKX,MAAQA,OACb2K,wBAAwBpH,EAAO0B,QAC/B2F,aAAa1I,KAAKvB,KAAM8D,EAAOxD,SAASC,uDAGzBqC,SAAOkE,mCAAOvF,KAAK+F,iBAClCe,aAAa3G,MAAMwI,qBAAsBtH,EAAQ,gBACjDyF,aAAa3G,MAAMqF,MAAQD,EAAO,kDAIlCmC,YAAYkB,eACZC,WAAW7I,KAAK4H,0DAIhBA,UAAUgB,eACVC,WAAW7I,KAAK0H,gDAGd9C,cACH5E,KAAK6H,cAAgBjD,SAChBkE,mBAAmB,mBAAKN,EAAE3G,UAAUC,IAAInD,EAAIoK,gBAC5CjC,aAAajF,UAAUC,IAAInD,EAAIoK,iBAC5BrF,MAAM,aACLoF,mBAAmB,mBAAKN,EAAE3G,UAAUI,OAAOtD,EAAIoK,aAC/CjC,aAAajF,UAAUI,OAAOtD,EAAIoK,WAClCC,gBAAgBpE,EAAKvC,aACrBwF,YAAcjD,IACdkE,mBAAmB,mBAAKG,EAAK9H,eAAeqH,OAC5CV,WACN,6CAIIU,KACT3G,UAAUI,OAAOtD,EAAIoC,YACrBZ,MAAM4B,WAAa,gBACnB5B,MAAMC,MAAQJ,KAAKK,QAAQ6B,iCA1IrB7B,EAASoH,EAAaiB,kBACzBrI,QAAUA,OACV5B,KAAOgJ,OACPiB,aAAeA,OACfxB,aAAc,OACdxF,WAAa,QACbmB,gBAAkB,QAClBlB,gBAAkB,QAClB4D,KAAO,QACPK,OAAS,QAETsD,iBACAC,cAAc1B,QACd2B,kBAEAxB,UAAUnG,MAAMsB,OAAS/C,KAAK+F,iBAE9B8B,YAAc7H,KAAK4H,eACnBoB,gBAAgBhJ,KAAK6H,YAAYxF,eCrBzBgH,yDAWRC,aAAelK,SAASC,eAAeT,EAAI2K,eAC3CD,aAAa/J,QAAU,eAClBd,EAAOwI,EAAKxI,OACb+K,UAAY,kBAAMC,EAAWhL,MAC7B4B,QAAQqJ,SAASjL,KAChBkL,gBAGLC,aAAexK,SAASC,eAAeT,EAAIiL,eAC3CD,aAAarK,QAAU,aACnBc,QAAQyJ,aACPH,kEAKLI,OAAS,IAAI7K,EAAY,SACjBc,KAAKK,aACRL,KAAKvB,mBACI,kBAAMkJ,EAAKqC,kCACR,kBAAMrC,EAAKP,0BAE5B6C,UAAY,IAAIrD,EAAU5G,KAAKK,QAASL,KAAKvB,KAAM,SAACA,EAAM6D,UAASqF,EAAKe,aAAajK,EAAM6D,4CAI3F2H,UAAUC,uDAIVD,UAAUD,+DAIVC,UAAU7C,uDAGN3I,EAAM6D,QACV7D,KAAOA,OACPsL,OAAOtL,KAAOA,OACdsL,OAAOjK,sBACRwC,IAASC,EAAOxD,SAASE,SACzBe,KAAK+J,OAAOnK,qEAKPuK,KAAKC,YAAYhL,SAASC,eAAekD,EAAO1D,4BAxDjDwB,EAAS5B,kBACZ4B,QAAUA,OAEVQ,gBACApC,KAAOA,OACP4L,eCMb,SAASC,EAAYC,EAAWnK,EAAhC,OAAuCoK,+BAAvC,EAAA,EAAkD,QACxC/I,EAAQ4B,MAAMC,KAAKlE,SAASqL,uBAAuBF,uCACtC9I,0DACVtB,MAAMqK,GAAYpK,0FCdPsK,SAAW9J,mCAAS,IAY5C,cACQxB,SAASC,eAAekD,EAAO1D,SAC/B,MAAM8L,MAAM,gEAEVC,EAAWxL,SAAS+F,cAAc,SAC/B0F,GAAKtI,EAAO1D,UACZiM,UAAYC,WACZZ,KAAK7E,YAAYsF,UAhBpBvK,EAAU2K,OAAOC,OAAO,GAAI1I,EAAOzD,YAAa8B,GAChDnC,EAAOyM,EAAQ7K,EAAQ5B,MAEvB0M,EAAQ,IAAI9B,EAAMhJ,EAAS5B,IDXtB,SAAqB4B,YACvBhB,eAAeT,EAAIwM,UAAUjL,MAAM4B,WAAa1B,EAAQgL,0BACxDhM,eAAeT,EAAIwM,UAAUjL,MAAMC,MAAQC,EAAQC,qBACnDjB,eAAeT,EAAI0M,WAAWnL,MAAM4B,WAAa1B,EAAQkL,2BACzDlM,eAAeT,EAAIC,SAASsB,MAAM4B,WAAa1B,EAAQmL,yBACvDnM,eAAeT,EAAImI,QAAQ5G,MAAM4B,WAAa1B,EAAQ2B,mBACtD3C,eAAeT,EAAI6M,OAAOtL,MAAM4B,WAAa1B,EAAQ2B,mBACrD3C,eAAeT,EAAI8M,WAAWvL,MAAM4B,WAAa1B,EAAQsL,0BACzDtM,eAAeT,EAAI2K,UAAUpJ,MAAMC,MAAQC,EAAQuL,qBACnDvM,eAAeT,EAAIiL,UAAU1J,MAAMC,MAAQC,EAAQwL,cAEhDlN,EAAImN,UAAWzL,EAAQ6B,kBACvBvD,EAAIuG,MAAO7E,EAAQ+C,uBACnBzE,EAAIyG,MAAO/E,EAAQ2B,UAAW,gBCD9B3B,KACN6J,gBCZK,YACC,SAACtJ,UAAW8J,EAAW9J,WAC3B,SAACnC,UAASgL,EAAWhL"}